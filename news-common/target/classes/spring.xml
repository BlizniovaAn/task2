<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:c="http://www.springframework.org/schema/c" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db_properties/db.properties</value>
            </list>
        </property>
    </bean>

    <!--DATASOURCES -->
    <bean id="springDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
        <property name="driverClassName" value="${driverClassName}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
        <property name="defaultAutoCommit" value="false"/>

    </bean>

    <!--DAO -->
    <bean id="userDao" class="by.epam.newsportal.dao.impl.UserDaoImpl">
        <constructor-arg name="dataSource" ref="springDataSource"/>
    </bean>
    <bean id="newsDao" class="by.epam.newsportal.dao.impl.NewsPieceDaoImpl">
        <constructor-arg name="dataSource" ref="springDataSource"/>
    </bean>
    <bean id="generalDao" class="by.epam.newsportal.dao.impl.GeneralDaoImpl" >
        <constructor-arg name="dataSource" ref="springDataSource"/>
    </bean>
    <bean id="authorDao" class="by.epam.newsportal.dao.impl.AuthorDaoImpl">
        <constructor-arg name="dataSource" ref="springDataSource"/>
    </bean>
    <bean id="tagDao" class="by.epam.newsportal.dao.impl.TagDaoImpl" >
        <constructor-arg name="dataSource" ref="springDataSource"/>
     </bean>
    <bean id="commentDao" class="by.epam.newsportal.dao.impl.CommentDaoImpl" >
        <constructor-arg name="dataSource" ref="springDataSource"/>
    </bean>

    <!--SERVICES -->
    <bean id="commentService" class="by.epam.newsportal.service.impl.CommentServiceImpl">
        <constructor-arg name="commentDao" ref="commentDao"/>
    </bean>
    <bean id="tagService" class="by.epam.newsportal.service.impl.TagServiceImpl">
        <constructor-arg name="tagDao" ref="tagDao"/>
    </bean>
    <bean id="userService" class="by.epam.newsportal.service.impl.UserServiceImpl">
        <constructor-arg name="userDao" ref="userDao"/>
    </bean>
    <bean id="roleService" class="by.epam.newsportal.service.impl.RoleServiceImpl">
    </bean>
    <bean id="authorService" class="by.epam.newsportal.service.impl.AuthorServiceImpl">
        <constructor-arg name="authorDao" ref="authorDao"/>
    </bean>
    <bean id="newsService" class="by.epam.newsportal.service.impl.NewsPieceServiceImpl">
        <constructor-arg name="generalDao" ref="generalDao"/>
        <constructor-arg name="newsDao" ref="newsDao"/>
        <constructor-arg name="authorDao" ref="authorDao"/>
        <constructor-arg name="tagDao" ref="tagDao"/>
        <constructor-arg name="commentDao" ref="commentDao"/>
    </bean>

    <context:annotation-config/>
    <context:component-scan base-package="by.epam.newsportal.service"/>
    <tx:annotation-driven transaction-manager="txManager"/>

    <!--TRANSACTION MANAGER -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="springDataSource"/>
    </bean>

</beans>